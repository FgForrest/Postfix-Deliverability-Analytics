akka {

    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = INFO
    daemonic = on

    actor {
        mailbox {
            requirements {
                "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" = akka.actor.mailbox.bounded-deque-based
            }
        }
    }
}

bounded-deque-based {
    mailbox-type = "akka.dispatch.BoundedDequeBasedMailbox"
    mailbox-capacity = 5000
    mailbox-push-timeout-time = 10s
}

atmos {
  trace {
    enabled = false

    node = agent

    traceable {

      "/user/supervisor" = on
      "/user/supervisor/indexer" = on
      "/user/supervisor/indexer/tailer" = on

      "*" = off
    }

    sampling {
      "/user/supervisor" = 1                     # sample every trace for supervisor
      "/user/supervisor/indexer"  = 10           # sample every 10th trace for indexer
      "/user/supervisor/indexer/tailer"  = 100   # sample every 100th trace for tailer
    }

  }
}

app {

    base = "/www"

    # several methods are being profiled for measuring execution count and time, should be disabled for production
    profiling {

        enabled = false

    }

    # email notification is sent to recipients if exception or some problem occurs
    notification {

        # email addresses that are to be sent notifications about warnings, errors, unknown bounces etc.
        recipients = ["liska.jakub@gmail.com"]

    }

    # jdk's HttpServer settings
    http-server {

        # hostname http server is running on
        host = localhost

        # port number of http server
        port = 1523

        # basic authentication credentials of smtp agent's http server
        # empty string means that auth will be disabled
        auth = []

        # it is possible to not start http server
        start = true

    }

    # bounce regex list is an xml file containing regular expressions used for bounce message categorization
    # it's the only way how to help application with log heuristics
    # it needs to be updated once in a while to categorize unresolved bounces that can be retrieved from rest method agent-status/unknown-bounces
    bounce-regex-list {

        # remote or local location of bounce regex list (use 'http://', 'classpath:' or 'file://')
        url = "file://"${app.base}"/Postfix-Deliverability-Analytics/server/src/main/resources/bounce-regex-list.xml"

        # basic base64 authentication credentials of remote server that serves bounce regex list file
        # empty string means it won't attempt to authenticate
        auth = ""

    }

    # information about postfix logs being analyzed
    # Logrotate utility is periodically rotating log files so that the log file will be renamed and compressed as follows :
    # mail.log -> mail.log.1 -> mail.log.1.gz -> mail.log.1.gz
    logs {

        # absolute path of directory that contains postfix log files
        dir = "/var/log/"

        # name of the log file that is being written to by postfix and tailed by agent
        tailed-log-file = "mail.log"

        # name of the file that was actually rotated
        rotated-file = "mail.log.1"

        # regex for matching backup log files that has been rotated.
        # NOTE that pattern must have a first capturing group pointing at number that says how many times log was rotated (important for log files indexing order)
        rotated-file-pattern = "mail\\.log\\.(\\d{1,3}).*"

        # maximum size of log files to index in Mega Bytes this property must be explicitly specified
        # because files must be processed by reverse alphabetical order (from the oldest to the newest)
        # and a log file might contain 10% or 90% of relevant log entries because postfix does not have to be dedicated necessarily.
        # Please note that this property doesn't see whether a file is zipped or not
        max-file-size-to-index : 1000

        # how many relevant lines (client-id, message-id, sentOrDeferred, expired) is in a batch to be indexed
        # this influences MapDB commit frequency which is now once in per index-batch-size records
        index-batch-size : 1000
    }

    # MapDB setup
    db {

        # absolute path of directory that contains database files
        dir = ${app.base}"/Postfix-Deliverability-Analytics/deploy/db/"

        # name of the database
        name = "smtpLogDb"

        # e.n.c.r.y.p.t.i.o.n key, empty string means that DB won't be encrypted
        auth = ""

    }

    timing {

        # how many seconds an actor thread is given for answering a request (eq. requesting indexer) before it fails
        request-timeout = 100

        # number of attempts to re-open a log file after it is moved during log rotation
        re-open-tries = 15

        # how many miliseconds to wait between re-open tries
        re-open-sleep = 1000

        # how many miliseconds to wait after reaching log file EOF before reading next line
        eof-wait-for-new-input-sleep = 1000

    }

}