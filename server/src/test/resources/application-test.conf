app {

    # several methods are being profiled for measuring execution count and time, should be disabled for production
    profiling {

        enabled = true

    }

    # email notification is sent to recipients if exception or some problem occurs
    notification {

        # email addresses that are to be sent notifications about warnings, errors, unknown bounces etc.
        recipients = [""]

    }

    # jdk's HttpServer settings
    http-server {

        # hostname http server is running on
        host = localhost

        # port number of http server
        port = 6666

        # basic authentication credentials of smtp agent's http server
        # empty string means that auth will be disabled
        auth = []

        # it is possible to not start http server
        start = true

    }

    # bounce regex list is an xml file containing regular expressions used for bounce message categorization
    # it's the only way how to help application with log heuristics
    # it needs to be updated once in a while to categorize unresolved bounces that can be retrieved from rest method agent-status/unknown-bounces
    bounce-regex-list {

        # remote or local location of bounce regex list (use 'http://', 'classpath:', 'file://', absolute or relative path)
        url = "./src/main/resources/bounce-regex-list.xml"

        # basic base64 authentication credentials of remote server that serves bounce regex list file
        # empty string means it won't attempt to authenticate
        auth = ""

    }

    # information about postfix logs being analyzed
    # Logrotate utility is periodically rotating log files so that the log file will be renamed and compressed as follows :
    # mail.log -> mail.log.1 -> mail.log.1.gz -> mail.log.1.gz
    logs {

        # path of directory that contains postfix log files
        dir = "src/test/resources/META-INF/logs/parser/"

        # name of the log file that is being written to by postfix and tailed by agent
        tailed-log-file = "tailed.log"

        # name of the file that was actually rotated
        rotated-file = "tailed.log.1"

        # regex for matching backup log files that has been rotated.
        # NOTE that pattern must have a first capturing group pointing at number that says how many times log was rotated (important for log files indexing order)
        rotated-file-pattern = "backup-.*.(\\d{1,3}).*"

        # maximum size of log files to index in Mega Bytes this property must be explicitly specified
        # because files must be processed by reverse alphabetical order (from the oldest to the newest)
        # and a log file might contain 10% or 90% of relevant log entries because postfix does not have to be dedicated necessarily.
        # Please note that this property doesn't see whether a file is zipped or not
        max-file-size-to-index : 900

        # how many relevant lines (client-id, message-id, sentOrDeferred, expired) is in a batch to be indexed
        # this influences MapDB commit frequency which is now once in per index-batch-size records
        index-batch-size : 1000
    }

    # MapDB setup
    db {

        # path of directory that contains database files
        dir = "src/test/resources/META-INF/db/"

        # name of the database
        name = "test"

        # e.n.c.r.y.p.t.i.o.n key, empty string means that DB won't be encrypted
        auth = ""

    }

    timing {

        # how many seconds an actor thread is given for answering a request (eq. requesting indexer) before it fails
        request-timeout = 20

        # number of attempts to re-open a log file after it is moved during log rotation
        re-open-tries = 5

        # how many miliseconds to wait between re-open tries
        re-open-sleep = 10

        # how many miliseconds to wait after reaching log file EOF before reading next line
        eof-wait-for-new-input-sleep = 20

    }

}